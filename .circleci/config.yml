# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: cimg/python:3.6
        environment:
          IRRD_DATABASE_URL: 'postgresql://root@localhost/circle_test'
          IRRD_DATABASE_URL_INTEGRATION_1: 'postgresql://root@localhost/circle_test_integration_1'
          IRRD_DATABASE_URL_INTEGRATION_2: 'postgresql://root@localhost/circle_test_integration_2'
          IRRD_REDIS_URL: 'redis://localhost'
          IRRD_REDIS_URL_INTEGRATION_1: 'redis://localhost/4'
          IRRD_REDIS_URL_INTEGRATION_2: 'redis://localhost/5'

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_HOST_AUTH_METHOD: trust

      - image: circleci/redis:5.0.4


    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v5-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v5-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v5-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: apt update
          command: |
            set +e
            sudo apt update
            echo

      - run:
          name: Installing psql client and enchant
          command: sudo apt install postgresql-client python3-enchant

      - run:
          name: Waiting for PostgreSQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for PostgreSQL && exit 1

      - run:
          name: Creating additional database 1
          command: psql -U root -h localhost -d circle_test -c "CREATE DATABASE circle_test_integration_1;"

      - run:
          name: Creating additional database 2
          command: psql -U root -h localhost -d circle_test -c "CREATE DATABASE circle_test_integration_2;"

      - run:
          name: run regular tests
          command: |
            . venv/bin/activate
            py.test --cov=irrd irrd --junitxml=test-reports/junit.xml --cov-fail-under=100 --cov-report term-missing:skip-covered

      - run:
          name: run integration tests
          command: |
            . venv/bin/activate
            py.test irrd/integration_tests/run.py -s

      - run:
          name: build docs
          command: |
            . venv/bin/activate
            sphinx-build -nW -b spelling docs/ docs/build

      - run:
          name: run flake8
          command: |
            . venv/bin/activate
            flake8 irrd

      - run:
          name: run mypy
          command: |
            . venv/bin/activate
            mypy irrd --ignore-missing-imports

      - run:
          name: report coverage
          # Coveralls token is set in CircleCI config.
          command: |
            . venv/bin/activate
            coveralls

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: /tmp/pytest-of-circleci/
